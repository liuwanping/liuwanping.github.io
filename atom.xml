<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Liu Wanping&#39;s Blog</title>
  
  <subtitle>大头怪</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-09T07:14:18.726Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Liu Wanping</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java用父类生命new子类对象VS用子类生命new子类对象的区别</title>
    <link href="http://yoursite.com/2019/01/31/Java%E7%94%A8%E7%88%B6%E7%B1%BB%E7%94%9F%E5%91%BDnew%E5%AD%90%E7%B1%BB%E5%AF%B9%E8%B1%A1VS%E7%94%A8%E5%AD%90%E7%B1%BB%E7%94%9F%E5%91%BDnew%E5%AD%90%E7%B1%BB%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2019/01/31/Java用父类生命new子类对象VS用子类生命new子类对象的区别/</id>
    <published>2019-01-31T07:13:23.000Z</published>
    <updated>2019-01-09T07:14:18.726Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Father a = new Son();<br>Son b = new Son();</p></blockquote><hr><h5 id="1-a只能调用Faher中有的函数，不能调用Son中新添加的函数，同时如果Son中有覆盖掉Father的函数，访问的是Son中的函数，也就是说引用a与实例方法动态绑定。"><a href="#1-a只能调用Faher中有的函数，不能调用Son中新添加的函数，同时如果Son中有覆盖掉Father的函数，访问的是Son中的函数，也就是说引用a与实例方法动态绑定。" class="headerlink" title="1. a只能调用Faher中有的函数，不能调用Son中新添加的函数，同时如果Son中有覆盖掉Father的函数，访问的是Son中的函数，也就是说引用a与实例方法动态绑定。"></a>1. a只能调用Faher中有的函数，不能调用Son中新添加的函数，同时如果Son中有覆盖掉Father的函数，访问的是Son中的函数，也就是说引用a与实例方法动态绑定。</h5><p><img src="https://github.com/liuwanping/MarkdownPics/raw/master/f1.png"></p><p><img src="https://github.com/liuwanping/MarkdownPics/raw/master/f2.png"></p><p>a访问Father中有的函数：<br><img src="https://github.com/liuwanping/MarkdownPics/raw/master/f3.png"><br>输出结果如下，可以看到调用的是子类的方法：<br><img src="https://github.com/liuwanping/MarkdownPics/raw/master/s1.png"></p><p>a访问Father中没有的函数<br><img src="https://github.com/liuwanping/MarkdownPics/raw/master/f4.png"><br>输出结果如下，报错：<br><img src="https://github.com/liuwanping/MarkdownPics/raw/master/s2.png"></p><h5 id="2-但是引用a与成员变量、静态方法静态绑定，也就是说，a只能访问a里的成员变量、静态方法，即使b里有同名的成员变量、静态方法。"><a href="#2-但是引用a与成员变量、静态方法静态绑定，也就是说，a只能访问a里的成员变量、静态方法，即使b里有同名的成员变量、静态方法。" class="headerlink" title="2. 但是引用a与成员变量、静态方法静态绑定，也就是说，a只能访问a里的成员变量、静态方法，即使b里有同名的成员变量、静态方法。"></a>2. 但是引用a与成员变量、静态方法静态绑定，也就是说，a只能访问a里的成员变量、静态方法，即使b里有同名的成员变量、静态方法。</h5><p><img src="https://github.com/liuwanping/MarkdownPics/raw/master/f5.png"></p><p><img src="https://github.com/liuwanping/MarkdownPics/raw/master/f6.png"></p><p><img src="https://github.com/liuwanping/MarkdownPics/raw/master/f7.png"></p><p>输出结果：<br><img src="https://github.com/liuwanping/MarkdownPics/raw/master/s3.png"></p><h5 id="3-b可以调用Father里的函数，也可以调用Son里另外添加的函数。"><a href="#3-b可以调用Father里的函数，也可以调用Son里另外添加的函数。" class="headerlink" title="3. b可以调用Father里的函数，也可以调用Son里另外添加的函数。"></a>3. b可以调用Father里的函数，也可以调用Son里另外添加的函数。</h5><p><img src="https://github.com/liuwanping/MarkdownPics/raw/master/f8.png"></p><p><img src="https://github.com/liuwanping/MarkdownPics/raw/master/f9.png"></p><p><img src="https://github.com/liuwanping/MarkdownPics/raw/master/f10.png"></p><p>输出结果：<br><img src="https://github.com/liuwanping/MarkdownPics/raw/master/s4.png"></p><hr><p>#####综上：<br>Father a = new Son();<br>Son b = new Son();</p><ol><li>a只能调用Faher中有的函数，不能调用Son中新添加的函数，同时如果Son中有覆盖掉Father的函数，访问的是Son中的函数，也就是说引用a与实例方法动态绑定。</li><li>但是引用a与成员变量、静态方法静态绑定，也就是说，a只能访问a里的成员变量、静态方法，即使b里有同名的成员变量、静态方法。</li><li>b可以调用Father里的函数，也可以调用Son里的函数。</li><li>对构造函数的执行，二者没有区别，都是先父后子。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Father a = new Son();&lt;br&gt;Son b = new Son();&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h5 id=&quot;1-a只能调用Faher中有的函数，不能调用Son中新添加的函数，同时如果Son中有覆盖掉Fath
      
    
    </summary>
    
      <category term="Java基础" scheme="http://yoursite.com/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java基础" scheme="http://yoursite.com/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode | Palindrome Partitioning II</title>
    <link href="http://yoursite.com/2018/11/12/LeetCode-Palindrome-Partitioning-II/"/>
    <id>http://yoursite.com/2018/11/12/LeetCode-Palindrome-Partitioning-II/</id>
    <published>2018-11-12T13:12:18.000Z</published>
    <updated>2018-11-12T13:48:04.508Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><blockquote><p>Given a string s, partition s such that every substring of the partition is a palindrome.<br>Return the minimum cuts needed for a palindrome partitioning of s.</p><p>Example:<br>Input: “aab”<br>Output: 1</p><p>Explanation: The palindrome partitioning [“aa”,”b”] could be produced using 1 cut.</p></blockquote><hr><h4 id="Solution："><a href="#Solution：" class="headerlink" title="Solution："></a>Solution：</h4><p>使用动态规划，求最优解朝着动态规划这个方向想。<br><img src="https://raw.githubusercontent.com/liuwanping/MarkdownPics/master/huiwenchuanII.JPG"><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minCut</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n = s.length();</span><br><span class="line">      <span class="keyword">boolean</span>  dp[][] = <span class="keyword">new</span> <span class="keyword">boolean</span>[n][n];<span class="comment">//判断是否是回文串</span></span><br><span class="line">      <span class="keyword">int</span> cut[] = <span class="keyword">new</span> <span class="keyword">int</span>[n];<span class="comment">//存储最小cut值</span></span><br><span class="line">      <span class="keyword">int</span> min;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;<span class="comment">//i是substring的尾部</span></span><br><span class="line">      min = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i ; j++) &#123;<span class="comment">//j是substring的头部</span></span><br><span class="line"><span class="comment">//j+1 &gt; i-1表示对角线部分，也就是一个字符作为一个回文串substring</span></span><br><span class="line"><span class="keyword">if</span> (s.charAt(i) == s.charAt(j) &amp;&amp; (j+<span class="number">1</span> &gt; i-<span class="number">1</span> || dp[j+<span class="number">1</span>][i-<span class="number">1</span>])) &#123;</span><br><span class="line">dp[j][i] = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">0</span>)<span class="comment">//表示尾部第i个和头部第一个字符相同，而且中间也是回文串，也就是这个串就是一个回文串，所以cut值直接就是0</span></span><br><span class="line">min = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="comment">//此时表示s.substring(j,i+1)是个回文串，也就是s[j]~s[i]之间的字符构成一个回文串</span></span><br><span class="line"><span class="comment">//注意关键在这个cut[j-1]而不是cut[i-1],</span></span><br><span class="line"><span class="comment">//cut[j-1]表示是s[j-1]之前的最小的cut值，</span></span><br><span class="line"><span class="comment">//此时是s[j]~s[i]是一个回文串，所以cut[i]之间从cut[j-1]加1即可</span></span><br><span class="line">min = Math.min(min, cut[j-<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cut[i] = min;</span><br><span class="line">&#125;</span><br><span class="line">      <span class="keyword">return</span> cut[n-<span class="number">1</span>];</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;题目描述：&quot;&gt;&lt;a href=&quot;#题目描述：&quot; class=&quot;headerlink&quot; title=&quot;题目描述：&quot;&gt;&lt;/a&gt;题目描述：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Given a string s, partition s such that every
      
    
    </summary>
    
      <category term="LeetCode" scheme="http://yoursite.com/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://yoursite.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>剑指Offer | 圆圈中最后剩下的数(约瑟夫环问题)</title>
    <link href="http://yoursite.com/2018/10/31/%E5%89%91%E6%8C%87Offer-%E5%9C%86%E5%9C%88%E4%B8%AD%E6%9C%80%E5%90%8E%E5%89%A9%E4%B8%8B%E7%9A%84%E6%95%B0-%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/10/31/剑指Offer-圆圈中最后剩下的数-约瑟夫环问题/</id>
    <published>2018-10-31T13:14:23.000Z</published>
    <updated>2018-11-12T13:34:03.243Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><blockquote><p>每年六一儿童节,牛客都会准备一些小礼物去看望孤儿院的小朋友,今年亦是如此。HF作为牛客的资深元老,自然也准备了一些小游戏。其中,有个游戏是这样的:首先,让小朋友们围成一个大圈。然后,他随机指定一个数m,让编号为0的小朋友开始报数。每次喊到m-1的那个小朋友要出列唱首歌,然后可以在礼品箱中任意的挑选礼物,并且不再回到圈中,从他的下一个小朋友开始,继续0…m-1报数….这样下去….直到剩下最后一个小朋友,可以不用表演,并且拿到牛客名贵的“名侦探柯南”典藏版(名额有限哦!!^_^)。请你试着想下,哪个小朋友会得到这份礼品呢？(注：小朋友的编号是从0到n-1)</p></blockquote><hr><h4 id="方法1："><a href="#方法1：" class="headerlink" title="方法1："></a>方法1：</h4><p>用链表模拟很好理解，依次删除结点，剩下最后一个即为最后结果。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*public class Node_List &#123;</span></span><br><span class="line"><span class="comment">int val;</span></span><br><span class="line"><span class="comment">Node_List next = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Node_List(int val)&#123;</span></span><br><span class="line"><span class="comment">this.val = val;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">LastRemaining_Solution</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">Node_List cur = <span class="keyword">new</span> Node_List(<span class="number">0</span>);</span><br><span class="line">Node_List head = cur;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">Node_List node= <span class="keyword">new</span> Node_List(i);</span><br><span class="line">cur.next = node;</span><br><span class="line">cur = node;</span><br><span class="line">&#125;    </span><br><span class="line">cur.next = head;</span><br><span class="line"></span><br><span class="line">Node_List p = cur;</span><br><span class="line">Node_List q = head;</span><br><span class="line"><span class="keyword">while</span> (q.next.val!=q.val) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m-<span class="number">1</span>; i++) &#123;</span><br><span class="line">p = p.next;</span><br><span class="line">q = q.next;</span><br><span class="line">&#125;</span><br><span class="line">p.next = q.next;</span><br><span class="line">q = q.next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> q.val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="方法2："><a href="#方法2：" class="headerlink" title="方法2："></a>方法2：</h4><p>链表选用LinkedList实现，较方法1可以提高一定效率。</p><pre><code class="java"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">LastRemaining_Solution</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>{    LinkedList&lt;Integer&gt; list = <span class="keyword">new</span> LinkedList&lt;Integer&gt;();    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)        list.add(i);    <span class="keyword">int</span> p = <span class="number">0</span>;    <span class="keyword">while</span> (list.size()&gt;<span class="number">1</span>) {        p = (p+m-<span class="number">1</span>)%list.size();<span class="comment">//注意这里使得可以从尾部跳回到头部</span>        list.remove(p);    }    <span class="keyword">return</span> list.size()==<span class="number">1</span>?list.get(<span class="number">0</span>):-<span class="number">1</span>;}</code></pre><h4 id="方法3："><a href="#方法3：" class="headerlink" title="方法3："></a>方法3：</h4><p>当数据量比较大时，以上两种方法时间和空间都比较大，因此用归纳法找到规律然后利用递归。</p><p>0，1，2，3，……，m-2，<del>m-1</del>，m，……，n-1 (总共n个数，删除第m-1个数)</p><p>下次删的时候从下面第一行这个序列开始往后数，我们把这个序列用第二行的序列进行重新标号，根据第二行的标号来找对应第一行的标号，从第二行看很容易看出要删除的是m-1，那么第二行的m-1对应第一行的哪个数呢？</p><table><thead><tr><th style="text-align:center">m</th><th style="text-align:center">m+1</th><th style="text-align:center">m+2</th><th style="text-align:center">…</th><th style="text-align:center"><del>m-1+m</del></th><th style="text-align:center">…</th><th style="text-align:center">n-1</th><th style="text-align:center">0</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">…</th><th style="text-align:center">m-2</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">…</td><td style="text-align:center"><del>m-1</del></td><td style="text-align:center">…</td><td style="text-align:center">n-1-m</td><td style="text-align:center">n-m</td><td style="text-align:center">n-m+1</td><td style="text-align:center">n-m+2</td><td style="text-align:center">…</td><td style="text-align:center">n-1</td></tr></tbody></table><p>也就是第二行的任意一个数p对应第一行哪个数？<br>如果p &lt;= n-m，第二行的m-1对应第一行的 p+m；<br>如果p&gt; n-m，第二行的m-1对应第一行的 (p+m)%n；<br> 综上，合并以上两种情况，若第二行的数是p，则对应的第一行数是(p+m)%n。</p><pre><code class="java"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">LastRemaining_Solution</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>{    <span class="keyword">if</span>(n == <span class="number">0</span>)        <span class="keyword">return</span> -<span class="number">1</span>;    <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">1</span>)        <span class="keyword">return</span> <span class="number">0</span>;    <span class="keyword">else</span>         <span class="keyword">return</span> (LastRemaining_Solution(n-<span class="number">1</span>,m)+m)%n;}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;题目描述：&quot;&gt;&lt;a href=&quot;#题目描述：&quot; class=&quot;headerlink&quot; title=&quot;题目描述：&quot;&gt;&lt;/a&gt;题目描述：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;每年六一儿童节,牛客都会准备一些小礼物去看望孤儿院的小朋友,今年亦是如此。HF作为牛客的资
      
    
    </summary>
    
      <category term="剑指Offer" scheme="http://yoursite.com/categories/%E5%89%91%E6%8C%87Offer/"/>
    
    
      <category term="剑指Offer" scheme="http://yoursite.com/tags/%E5%89%91%E6%8C%87Offer/"/>
    
  </entry>
  
  <entry>
    <title>Java中char，int，String的相加减</title>
    <link href="http://yoursite.com/2018/10/31/Java%E4%B8%ADchar%EF%BC%8Cint%EF%BC%8CString%E7%9A%84%E7%9B%B8%E5%8A%A0%E5%87%8F/"/>
    <id>http://yoursite.com/2018/10/31/Java中char，int，String的相加减/</id>
    <published>2018-10-31T07:16:17.000Z</published>
    <updated>2018-10-31T07:55:42.949Z</updated>
    
    <content type="html"><![CDATA[<h3 id="要点："><a href="#要点：" class="headerlink" title="要点："></a>要点：</h3><ul><li><strong>char与int</strong> ：可以相加减；int取本身数值，char取对应的ASCII码值；得到的结果是ASCII码增大或减小了int对应的数值大小；如果结果赋值给char类型的变量即是该ASCII码对应的字符，如果赋值给int类型的变量即是该ASCII码的大小。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> c = <span class="string">'2'</span>-<span class="number">3</span>;<span class="comment">//'2'的ASCII码:50</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="string">'2'</span>-<span class="number">3</span>;</span><br><span class="line">System.out.println(<span class="string">"c:"</span>+c);<span class="comment">//'/'的ASCII码:47</span></span><br><span class="line">System.out.println(<span class="string">"i:"</span>+i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>c:/<br>i:47</p></blockquote><ul><li><strong>char与char</strong> ：可以相加减；都取各自对应的ASCII码进行加减；如果结果赋值给char类型的变量即是该ASCII码对应的字符，如果赋值给int类型的变量即是该ASCII码的大小。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> c = <span class="string">'a'</span>-<span class="string">'1'</span>;<span class="comment">//'a'的ASCII码：97，'1'的ASCII码：49</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="string">'a'</span>-<span class="string">'1'</span>;</span><br><span class="line">System.out.println(<span class="string">"c:"</span>+c);<span class="comment">//'0'的ASCII码：48</span></span><br><span class="line">System.out.println(<span class="string">"i:"</span>+i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>c:0<br>i:48</p></blockquote><ul><li><strong>String与int</strong> ：只能加不能减；得到的结果为String类型。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">String s = <span class="string">"2"</span>+<span class="number">3</span>;</span><br><span class="line">System.out.println(<span class="string">"s:"</span>+s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>s:23</p></blockquote><hr><h3 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h3><blockquote><p>把字符串转换成整数。<br>将一个字符串转换成一个整数(实现Integer.valueOf(string)的功能，但是string不符合数字要求时返回0)，要求不能使用字符串转换整数的库函数。 数值为0或者字符串不是一个合法的数值则返回0。<br>输入描述:<br>输入一个字符串,包括数字字母符号,可以为空<br>输出描述:<br>如果是合法的数值表达则返回该数字，否则返回0<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">StrToInt</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!str.matches(<span class="string">"(-|\\+)?\\d+"</span>))<span class="comment">//匹配可能带有正负号的数字形式的字符串</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> strArr[] = str.toCharArray();</span><br><span class="line"><span class="keyword">if</span>(strArr[<span class="number">0</span>] == <span class="string">'-'</span>)</span><br><span class="line">flag = -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = (strArr[<span class="number">0</span>]==<span class="string">'+'</span>||strArr[<span class="number">0</span>]==<span class="string">'-'</span>)?<span class="number">1</span>:<span class="number">0</span>; i &lt; strArr.length; i++)</span><br><span class="line">res = res*<span class="number">10</span> + strArr[i] - <span class="string">'0'</span>;<span class="comment">//注意这里根据strArr[i] - '0'的差值得到strArr[i]对应的数字</span></span><br><span class="line"><span class="keyword">return</span> res*flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;要点：&quot;&gt;&lt;a href=&quot;#要点：&quot; class=&quot;headerlink&quot; title=&quot;要点：&quot;&gt;&lt;/a&gt;要点：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;char与int&lt;/strong&gt; ：可以相加减；int取本身数值，char取对应的ASCII码值；得到
      
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java基础" scheme="http://yoursite.com/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Java中的逻辑与&amp;，短路与&amp;&amp;，逻辑或|，短路或|| </title>
    <link href="http://yoursite.com/2018/10/31/Java%E4%B8%AD%E7%9A%84%E9%80%BB%E8%BE%91%E4%B8%8E-%EF%BC%8C%E7%9F%AD%E8%B7%AF%E4%B8%8E-%EF%BC%8C%E9%80%BB%E8%BE%91%E6%88%96-%EF%BC%8C%E7%9F%AD%E8%B7%AF%E6%88%96/"/>
    <id>http://yoursite.com/2018/10/31/Java中的逻辑与-，短路与-，逻辑或-，短路或/</id>
    <published>2018-10-31T01:56:00.000Z</published>
    <updated>2018-10-31T02:34:00.319Z</updated>
    
    <content type="html"><![CDATA[<h3 id="区别："><a href="#区别：" class="headerlink" title="区别："></a>区别：</h3><ul><li><strong>逻辑与&amp;</strong> ：&amp;左右两边都判断再得出结果；可以计算boolean类型的与，也可以计算int类型数字的按位与。</li><li><strong>短路与&amp;&amp;</strong> ：如果&amp;&amp;的左边为false，则右边不看直接得出结果；只能计算boolean类型的与。</li><li><strong>逻辑或|</strong> ：|左右两边都判断再得出结果；可以计算boolean类型的或，也可以计算int类型数字的按位或。</li><li><strong>短路或||</strong> ：如果||的左边为true，则右边不看直接得出结果；只能计算boolean类型的或。</li></ul><hr><h3 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h3><blockquote><p>求1+2+3+…+n，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（A?B:C）。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Sum_Solution</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = n;</span><br><span class="line"><span class="keyword">boolean</span> b = res!=<span class="number">0</span> &amp;&amp; (res+=Sum_Solution(n-<span class="number">1</span>))&gt;<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当递归到n = 0时，&amp;&amp;左边为false不看右边直接得出b = false，这条语句完成，接下来return 0，相当于递归出口，这时程序开始往上返。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;区别：&quot;&gt;&lt;a href=&quot;#区别：&quot; class=&quot;headerlink&quot; title=&quot;区别：&quot;&gt;&lt;/a&gt;区别：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;逻辑与&amp;amp;&lt;/strong&gt; ：&amp;amp;左右两边都判断再得出结果；可以计算boolean类型的与
      
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java基础" scheme="http://yoursite.com/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>测试文</title>
    <link href="http://yoursite.com/2018/10/27/%E6%B5%8B%E8%AF%95%E6%96%87/"/>
    <id>http://yoursite.com/2018/10/27/测试文/</id>
    <published>2018-10-27T03:25:32.000Z</published>
    <updated>2018-10-27T08:37:29.493Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h1><p>@(示例笔记本)[马克飞象|帮助|Markdown]</p><p><strong>马克飞象</strong>是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：</p><ul><li><strong>功能丰富</strong> ：支持高亮代码块、<em>LaTeX</em> 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；</li><li><strong>得心应手</strong> ：简洁高效的编辑器，提供<a href="http://maxiang.info/client_zh" target="_blank" rel="noopener">桌面客户端</a>以及<a href="https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop" target="_blank" rel="noopener">离线Chrome App</a>，支持移动端 Web；</li><li><strong>深度整合</strong> ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。</li></ul><hr><p>[TOC]</p><h2 id="Markdown简介"><a href="#Markdown简介" class="headerlink" title="Markdown简介"></a>Markdown简介</h2><blockquote><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— <a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">维基百科</a></p></blockquote><p>正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为<strong>粗体</strong>或者<em>斜体</em>，创建一个<a href="http://www.example.com" target="_blank" rel="noopener">链接</a>或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按<code>Ctrl + /</code>查看帮助。 </p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span><span class="params">(param1=<span class="string">''</span>, param2=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="string">'''A docstring'''</span></span><br><span class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Greater'</span></span><br><span class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span>) <span class="keyword">or</span> <span class="keyword">None</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">'''interpreter</span></span><br><span class="line"><span class="string"><span class="meta">... </span>prompt'''</span></span><br></pre></td></tr></table></figure><h3 id="LaTeX-公式"><a href="#LaTeX-公式" class="headerlink" title="LaTeX 公式"></a>LaTeX 公式</h3><p>可以创建行内公式，例如 $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$。或者块级公式：</p><p>$$    x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><table><thead><tr><th style="text-align:left">Item</th><th style="text-align:right">Value</th><th style="text-align:center">Qty</th></tr></thead><tbody><tr><td style="text-align:left">Computer</td><td style="text-align:right">1600 USD</td><td style="text-align:center">5</td></tr><tr><td style="text-align:left">Phone</td><td style="text-align:right">12 USD</td><td style="text-align:center">12</td></tr><tr><td style="text-align:left">Pipe</td><td style="text-align:right">1 USD</td><td style="text-align:center">234</td></tr></tbody></table><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start</span><br><span class="line">e=&gt;end</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><p>以及时序图:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure><blockquote><p><strong>提示：</strong>想了解更多，请查看<strong>流程图</strong><a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="noopener">语法</a>以及<strong>时序图</strong><a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="noopener">语法</a>。</p></blockquote><h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h3><p>使用 <code>- [ ]</code> 和 <code>- [x]</code> 语法可以创建复选框，实现 todo-list 等功能。例如：</p><ul><li style="list-style: none"><input type="checkbox" checked> 已完成事项</li><li style="list-style: none"><input type="checkbox"> 待办事项1</li><li style="list-style: none"><input type="checkbox"> 待办事项2</li></ul><blockquote><p><strong>注意：</strong>目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在<strong>马克飞象</strong>中修改 Markdown 原文才可生效。下个版本将会全面支持。</p></blockquote><h2 id="印象笔记相关"><a href="#印象笔记相关" class="headerlink" title="印象笔记相关"></a>印象笔记相关</h2><h3 id="笔记本和标签"><a href="#笔记本和标签" class="headerlink" title="笔记本和标签"></a>笔记本和标签</h3><p><strong>马克飞象</strong>增加了<code>@(笔记本)[标签A|标签B]</code>语法, 以选择笔记本和添加标签。 <strong>绑定账号后</strong>， 输入<code>(</code>自动会出现笔记本列表，请从中选择。</p><h3 id="笔记标题"><a href="#笔记标题" class="headerlink" title="笔记标题"></a>笔记标题</h3><p><strong>马克飞象</strong>会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 <code>欢迎使用马克飞象</code>。</p><h3 id="快捷编辑"><a href="#快捷编辑" class="headerlink" title="快捷编辑"></a>快捷编辑</h3><p>保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到<strong>马克飞象</strong>中打开并编辑该笔记。</p><blockquote><p><strong>注意：</strong>目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。</p></blockquote><h3 id="数据同步"><a href="#数据同步" class="headerlink" title="数据同步"></a>数据同步</h3><p><strong>马克飞象</strong>通过<strong>将Markdown原文以隐藏内容保存在笔记中</strong>的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。</p><blockquote><p><strong>隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。</strong></p></blockquote><h3 id="离线存储"><a href="#离线存储" class="headerlink" title="离线存储"></a>离线存储</h3><p><strong>马克飞象</strong>使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过<code>文档管理</code>打开。</p><blockquote><p><strong>注意：</strong>虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，<strong>请务必经常及时同步到印象笔记</strong>。</p></blockquote><h2 id="编辑器相关"><a href="#编辑器相关" class="headerlink" title="编辑器相关"></a>编辑器相关</h2><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>右侧系统菜单（快捷键<code>Ctrl + M</code>）的<code>设置</code>中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。</p><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p>帮助    <code>Ctrl + /</code><br>同步文档    <code>Ctrl + S</code><br>创建文档    <code>Ctrl + Alt + N</code><br>最大化编辑器    <code>Ctrl + Enter</code><br>预览文档 <code>Ctrl + Alt + Enter</code><br>文档管理    <code>Ctrl + O</code><br>系统菜单    <code>Ctrl + M</code> </p><p>加粗    <code>Ctrl + B</code><br>插入图片    <code>Ctrl + G</code><br>插入链接    <code>Ctrl + L</code><br>提升标题    <code>Ctrl + H</code></p><h2 id="关于收费"><a href="#关于收费" class="headerlink" title="关于收费"></a>关于收费</h2><p><strong>马克飞象</strong>为新用户提供 10 天的试用期，试用期过后需要<a href="maxiang.info/vip.html">续费</a>才能继续使用。未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。</p><h2 id="反馈与建议"><a href="#反馈与建议" class="headerlink" title="反馈与建议"></a>反馈与建议</h2><ul><li>微博：<a href="http://weibo.com/u/2788354117" target="_blank" rel="noopener">@马克飞象</a>，<a href="http://weibo.com/ggock" title="开发者个人账号" target="_blank" rel="noopener">@GGock</a></li><li>邮箱：<a href="mailto:&#104;&#117;&#115;&#116;&#x67;&#111;&#99;&#x6b;&#64;&#103;&#109;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;" target="_blank" rel="noopener">&#104;&#117;&#115;&#116;&#x67;&#111;&#99;&#x6b;&#64;&#103;&#109;&#97;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;</a></li></ul><hr><p>感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。</p><p>[^demo]: 这是一个示例脚注。请查阅 <a href="https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide#footnotes" target="_blank" rel="noopener">MultiMarkdown 文档</a> 关于脚注的说明。 <strong>限制：</strong> 印象笔记的笔记内容使用 <a href="https://dev.yinxiang.com/doc/articles/enml.php" target="_blank" rel="noopener">ENML</a> 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致<code>脚注</code>和<code>TOC</code>无法正常点击。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;测试一下&quot;&gt;&lt;a href=&quot;#测试一下&quot; class=&quot;headerlink&quot; title=&quot;测试一下&quot;&gt;&lt;/a&gt;测试一下&lt;/h1&gt;&lt;p&gt;@(示例笔记本)[马克飞象|帮助|Markdown]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;马克飞象&lt;/strong&gt;是一款专为印象
      
    
    </summary>
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
      <category term="测试" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
